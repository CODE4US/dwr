Index: engine.js
===================================================================
RCS file: /cvs/dwr/java/uk/ltd/getahead/dwr/engine.js,v
retrieving revision 1.83
diff -u -r1.83 engine.js
--- engine.js	21 Feb 2006 08:45:30 -0000	1.83
+++ engine.js	22 Feb 2006 02:20:11 -0000
@@ -66,14 +66,17 @@
 /** XHR remoting method constant. See DWREngine.setMethod() */
 DWREngine.IFrame = 2;
 
+/** XHR remoting method constant. See DWREngine.setMethod() */
+DWREngine.XssScript = 3;
+
 /**
  * Set the preferred remoting method.
  * @param newmethod One of DWREngine.XMLHttpRequest or DWREngine.IFrame
  * @see http://getahead.ltd.uk/dwr/browser/engine/options
  */
 DWREngine.setMethod = function(newmethod) {
-  if (newmethod != DWREngine.XMLHttpRequest && newmethod != DWREngine.IFrame) {
-    DWREngine._handleError("Remoting method must be one of DWREngine.XMLHttpRequest or DWREngine.IFrame");
+  if (newmethod != DWREngine.XMLHttpRequest && newmethod != DWREngine.IFrame && newmethod != DWREngine.XssScript) {
+    DWREngine._handleError("Remoting method must be one of DWREngine.XMLHttpRequest or DWREngine.IFrame or DWREngine.XssScript");
     return;
   }
   DWREngine._method = newmethod;
@@ -339,6 +342,12 @@
     delete callData.postHook;
   }
 
+  // XssScript method parameter - the xssBase
+  if (callData.xssBase != null) {
+    DWREngine._batch.xssBase = callData.xssBase;
+    delete callData.xssBase;
+  }
+
   // Default the error and warning handlers
   if (callData.errorHandler == null) callData.errorHandler = DWREngine._errorHandler;
   if (callData.warningHandler == null) callData.warningHandler = DWREngine._warningHandler;
@@ -476,6 +485,11 @@
     }
   }
   else {
+	if (batch.method != DWREngine.XssScript) {
+
+
+
+	
     batch.map.xml = "false";
     var idname = "dwr-if-" + batch.map["c0-id"];
     // Proceed using iframe
@@ -514,6 +528,31 @@
       document.body.appendChild(batch.form);
       batch.form.submit();
     }
+
+
+
+
+	}
+	else {
+		if (!batch.xssBase) {
+			throw "please specify the xssBase property within the call data"
+		}
+
+		batch.map.xml = "true";
+	    var id = "dwr-xssscript-" + batch.map["c0-id"];
+	
+		for (prop in batch.map) {
+			if (typeof batch.map[prop] != "function") {
+				query += encodeURIComponent(prop) + "=" + encodeURIComponent(batch.map[prop]) + "&";
+			}
+		}
+		query = query.substring(0, query.length - 1);
+	
+	    batch.script = document.createElement('script');
+	    batch.script.id = id;
+		batch.script.src = batch.xssBase + batch.path + "/exec/" + statsInfo + "?" + query;
+		document.body.appendChild(batch.script);
+	}
   }
 };
 

