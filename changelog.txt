
Removed deprecated.js

Refactored to abstract out the wire protocol. By default DWR still uses it's own
slighty JSONish protocol, but it should be possible for someone to create a
tweak that makes DWR run over SOAP or JSON-RPC or whatever you want.

Applied the XssScript patch. This enables a 3rd remoting scheme. DWR could
previously use XHR or iframe remoting. Now we also support script tag remoting.
NOTE: I've changed the name from XssScript to ScriptTag because XSS has the
implication of a secuity hole, and I don't want people to think that we are
exploiting a security hole.

Update to getValues to make it work more like a form. A Checkbox will return its
value if checked and false if not

- Reverse Ajax. You can now asynchronously send Javascript from the server to the client, which makes writing interactive applications much easier.
- New scope. In addition to application, session, page and request scopes there is a new "script" scope that is tracked by Javascript. It doesn't require cookies
- Refactoring. To make DWR more embeddable
- Script remoting. In addition to XHR and iframe we now do DOM based Script tag remoting
- Remote Metadata. We pass options in a calldata block into a request attribute to allow meta to pass through
- Better Spring integration

Demo apps / Start points
We're creating dwr-struts and dwr-spring and I'd like to create a dwr-jsf project that show how to do some bare-bones project integration.

Stuff I'm working on:
- Serverside DWRUtil, Serverside Scriptaculous and Serverside Dojo. Create a Java API that maps through to the Javascript API
- Accessibility. DWR should integrate with screen readers to tell them when a page has changed

Stuff that would be cool:
- Annotations based configuration
- Using JDK5 type metadata to make <signatures> optional
- WDDX stuff from Rob Gonda
- Overloaded objects marshaled to correct types
- Hierarchical DWRUtil.[g|s]etValues

